# Dockerfile para Backend Spliton - Railway Deploy com Migrations Autom√°ticas
FROM node:20-alpine

# Instalar depend√™ncias necess√°rias para Prisma com PostgreSQL
RUN apk add --no-cache openssl bash

# Criar diret√≥rio da aplica√ß√£o
WORKDIR /app

# Copiar package.json do backend
COPY backend/package.json ./

# Instalar todas as depend√™ncias (incluindo dev dependencies para build)
RUN npm install

# Copiar c√≥digo fonte do backend (incluindo prisma)
COPY backend/ ./

# Verificar estrutura de arquivos
RUN echo "üìÅ Verificando estrutura:" && ls -la

# Criar script de inicializa√ß√£o inline se n√£o existir
RUN if [ ! -f "scripts/start.sh" ]; then \
        echo "‚ö†Ô∏è Script start.sh n√£o encontrado, criando inline..." && \
        mkdir -p scripts && \
        echo '#!/bin/bash' > scripts/start.sh && \
        echo 'echo "üöÄ Iniciando Backend SplitOn..."' >> scripts/start.sh && \
        echo 'echo "üìä Executando migra√ß√µes..."' >> scripts/start.sh && \
        echo 'npx prisma migrate deploy' >> scripts/start.sh && \
        echo 'echo "‚úÖ Iniciando aplica√ß√£o..."' >> scripts/start.sh && \
        echo 'node dist/src/main.js' >> scripts/start.sh && \
        chmod +x scripts/start.sh; \
    fi

# Verificar se o script existe agora
RUN ls -la scripts/ && cat scripts/start.sh

# Gerar Prisma Client
RUN npx prisma generate

# Build da aplica√ß√£o
RUN npm run build

# Verificar se o build foi bem-sucedido
RUN ls -la dist/src/

# Expor porta
EXPOSE 3000

# Vari√°veis de ambiente
ENV NODE_ENV=production
ENV PORT=3000

# Comando de inicializa√ß√£o com fallback
CMD ["sh", "-c", "if [ -f '/app/scripts/start.sh' ]; then echo '‚úÖ Usando script start.sh' && /app/scripts/start.sh; else echo '‚ö†Ô∏è Fallback: executando diretamente' && npx prisma migrate deploy && node dist/src/main.js; fi"]
